{"failedCount":4,"prefixedPath":"classpath:features\/handler.feature","packageQualifiedName":"features.handler","loopIndex":-1,"relativePath":"features\/handler.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def dbHandler = Java.type('helpers.DbHandler')"},"stepLog":"00:58:47.573 karate.env system property was: null \n00:58:47.637 classpath:features\/handler.feature:4\n* def dbHandler = Java.type('helpers.DbHandler')\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"url 'http:\/\/localhost:3000'"},"stepLog":"00:58:47.638 classpath:features\/handler.feature:5\n* url 'http:\/\/localhost:3000'\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18","millis":0.0,"status":"failed"},"step":{"comments":["# * configure afterScenario =","#   \"\"\"","#   function(){","#   karate.log('after scenario:', karate.scenario.name);","#   }","#   \"\"\"","# * configure afterFeature =","#   \"\"\"","#   function(){","#   karate.log('after feature:', karate.feature.name);","#   }","#   \"\"\""],"background":true,"line":18,"prefix":"*","index":2,"text":"def sqlAddPizza = \"\""},"stepLog":"00:58:47.639 classpath:features\/handler.feature:18\n* def sqlAddPizza = \"\"\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21","millis":0.0,"status":"failed"},"step":{"line":21,"prefix":"*","index":0,"text":"def pizzaName = \"PizzaTestAGABA\""},"stepLog":"00:58:47.639 classpath:features\/handler.feature:21\n* def pizzaName = \"PizzaTestAGABA\"\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\nclasspath:features\/handler.feature:22","millis":0.0,"status":"failed"},"step":{"line":22,"prefix":"*","index":1,"text":"def price = 320"},"stepLog":"00:58:47.640 classpath:features\/handler.feature:22\n* def price = 320\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\nclasspath:features\/handler.feature:22\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\nclasspath:features\/handler.feature:22\nclasspath:features\/handler.feature:23","millis":0.0,"status":"failed"},"step":{"line":23,"prefix":"*","index":2,"text":"eval sqlAddPizza = \"INSERT INTO pizzas (name, price) VALUES ('\" + pizzaName + \"', \" + price + \")\""},"stepLog":"00:58:47.640 classpath:features\/handler.feature:23\n* eval sqlAddPizza = \"INSERT INTO pizzas (name, price) VALUES ('\" + pizzaName + \"', \" + price + \")\"\n>> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\nclasspath:features\/handler.feature:22\nclasspath:features\/handler.feature:23\n"}],"line":20,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:features\/handler.feature:20\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:21\nclasspath:features\/handler.feature:22\nclasspath:features\/handler.feature:23","tags":["smoke"],"executorName":"main","name":"Create a pizza","startTime":1694028527390,"refId":"[1:20]","endTime":1694028527640,"exampleIndex":-1},{"sectionIndex":1,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def dbHandler = Java.type('helpers.DbHandler')"},"stepLog":"00:58:47.687 karate.env system property was: null \n00:58:47.700 classpath:features\/handler.feature:4\n* def dbHandler = Java.type('helpers.DbHandler')\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"url 'http:\/\/localhost:3000'"},"stepLog":"00:58:47.700 classpath:features\/handler.feature:5\n* url 'http:\/\/localhost:3000'\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18","millis":0.0,"status":"failed"},"step":{"comments":["# * configure afterScenario =","#   \"\"\"","#   function(){","#   karate.log('after scenario:', karate.scenario.name);","#   }","#   \"\"\"","# * configure afterFeature =","#   \"\"\"","#   function(){","#   karate.log('after feature:', karate.feature.name);","#   }","#   \"\"\""],"background":true,"line":18,"prefix":"*","index":2,"text":"def sqlAddPizza = \"\""},"stepLog":"00:58:47.701 classpath:features\/handler.feature:18\n* def sqlAddPizza = \"\"\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29","millis":0.0,"status":"failed"},"step":{"comments":["# * print sqlAddPizza"],"line":29,"prefix":"*","index":0,"text":"def toppingName = \"toppingtestGABA\""},"stepLog":"00:58:47.703 classpath:features\/handler.feature:29\n* def toppingName = \"toppingtestGABA\"\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30","millis":0.0,"status":"failed"},"step":{"line":30,"prefix":"*","index":1,"text":"def price = 400"},"stepLog":"00:58:47.704 classpath:features\/handler.feature:30\n* def price = 400\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\nclasspath:features\/handler.feature:31","millis":0.0,"status":"failed"},"step":{"line":31,"prefix":"*","index":2,"text":"def is_internal = false"},"stepLog":"00:58:47.705 classpath:features\/handler.feature:31\n* def is_internal = false\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\nclasspath:features\/handler.feature:31\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\nclasspath:features\/handler.feature:31\nclasspath:features\/handler.feature:32","millis":0.0,"status":"failed"},"step":{"line":32,"prefix":"*","index":3,"text":"def sqlAddTopping = \"INSERT INTO toppings (name, price, is_internal) VALUES ('\" + toppingName + \"', \" + price + \", \" + is_internal + \")\""},"stepLog":"00:58:47.706 classpath:features\/handler.feature:32\n* def sqlAddTopping = \"INSERT INTO toppings (name, price, is_internal) VALUES ('\" + toppingName + \"', \" + price + \", \" + is_internal + \")\"\n>> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\nclasspath:features\/handler.feature:31\nclasspath:features\/handler.feature:32\n"}],"line":27,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:features\/handler.feature:27\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:29\nclasspath:features\/handler.feature:30\nclasspath:features\/handler.feature:31\nclasspath:features\/handler.feature:32","executorName":"main","name":"Create a Topping","startTime":1694028527686,"refId":"[2:27]","endTime":1694028527706,"exampleIndex":-1},{"sectionIndex":2,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def dbHandler = Java.type('helpers.DbHandler')"},"stepLog":"00:58:47.720 karate.env system property was: null \n00:58:47.729 classpath:features\/handler.feature:4\n* def dbHandler = Java.type('helpers.DbHandler')\n>> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"url 'http:\/\/localhost:3000'"},"stepLog":"00:58:47.732 classpath:features\/handler.feature:5\n* url 'http:\/\/localhost:3000'\n>> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18","millis":0.0,"status":"failed"},"step":{"comments":["# * configure afterScenario =","#   \"\"\"","#   function(){","#   karate.log('after scenario:', karate.scenario.name);","#   }","#   \"\"\"","# * configure afterFeature =","#   \"\"\"","#   function(){","#   karate.log('after feature:', karate.feature.name);","#   }","#   \"\"\""],"background":true,"line":18,"prefix":"*","index":2,"text":"def sqlAddPizza = \"\""},"stepLog":"00:58:47.733 classpath:features\/handler.feature:18\n* def sqlAddPizza = \"\"\n>> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:37","millis":0.0,"status":"failed"},"step":{"line":37,"prefix":"*","index":0,"text":"def level = dbHandler.getPizzasById(1)"},"stepLog":"00:58:47.734 classpath:features\/handler.feature:37\n* def level = dbHandler.getPizzasById(1)\n>> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:37\n"}],"line":36,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:features\/handler.feature:36\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:37","tags":["smoke"],"executorName":"main","name":"Get a Pizza by Ids","startTime":1694028527719,"refId":"[3:36]","endTime":1694028527734,"exampleIndex":-1},{"sectionIndex":3,"stepResults":[{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4","millis":0.0,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def dbHandler = Java.type('helpers.DbHandler')"},"stepLog":"00:58:47.751 karate.env system property was: null \n00:58:47.802 classpath:features\/handler.feature:4\n* def dbHandler = Java.type('helpers.DbHandler')\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5","millis":0.0,"status":"failed"},"step":{"background":true,"line":5,"prefix":"*","index":1,"text":"url 'http:\/\/localhost:3000'"},"stepLog":"00:58:47.802 classpath:features\/handler.feature:5\n* url 'http:\/\/localhost:3000'\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18","millis":0.0,"status":"failed"},"step":{"comments":["# * configure afterScenario =","#   \"\"\"","#   function(){","#   karate.log('after scenario:', karate.scenario.name);","#   }","#   \"\"\"","# * configure afterFeature =","#   \"\"\"","#   function(){","#   karate.log('after feature:', karate.feature.name);","#   }","#   \"\"\""],"background":true,"line":18,"prefix":"*","index":2,"text":"def sqlAddPizza = \"\""},"stepLog":"00:58:47.804 classpath:features\/handler.feature:18\n* def sqlAddPizza = \"\"\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45","millis":0.0,"status":"failed"},"step":{"comments":["# First API request with path '\/endpoint1'"],"line":45,"prefix":"Given","index":0,"text":"path '\/ping'"},"stepLog":"00:58:47.805 classpath:features\/handler.feature:45\nGiven path '\/ping'\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46","millis":0.0,"status":"failed"},"step":{"line":46,"prefix":"When","index":1,"text":"method GET"},"stepLog":"00:58:47.806 classpath:features\/handler.feature:46\nWhen method GET\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47","millis":0.0,"status":"failed"},"step":{"line":47,"prefix":"Then","index":2,"text":"status 200"},"stepLog":"00:58:47.806 classpath:features\/handler.feature:47\nThen status 200\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48","millis":0.0,"status":"failed"},"step":{"line":48,"prefix":"And","index":3,"text":"response.message == \"pong\""},"stepLog":"00:58:47.807 classpath:features\/handler.feature:48\nAnd response.message == \"pong\"\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51","millis":0.0,"status":"failed"},"step":{"comments":["# Second API request with path '\/endpoint2'"],"line":51,"prefix":"Given","index":4,"text":"path '\/piang'"},"stepLog":"00:58:47.808 classpath:features\/handler.feature:51\nGiven path '\/piang'\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52","millis":0.0,"status":"failed"},"step":{"line":52,"prefix":"When","index":5,"text":"method GET"},"stepLog":"00:58:47.812 classpath:features\/handler.feature:52\nWhen method GET\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\nclasspath:features\/handler.feature:53","millis":0.0,"status":"failed"},"step":{"line":53,"prefix":"Then","index":6,"text":"status 200"},"stepLog":"00:58:47.815 classpath:features\/handler.feature:53\nThen status 200\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\nclasspath:features\/handler.feature:53\n"},{"result":{"nanos":0,"errorMessage":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\nclasspath:features\/handler.feature:53\nclasspath:features\/handler.feature:54","millis":0.0,"status":"failed"},"step":{"line":54,"prefix":"And","index":7,"text":"response.message == \"poang\""},"stepLog":"00:58:47.816 classpath:features\/handler.feature:54\nAnd response.message == \"poang\"\n>> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\nclasspath:features\/handler.feature:53\nclasspath:features\/handler.feature:54\n"}],"line":43,"description":"","durationMillis":0.0,"failed":true,"error":">> classpath:features\/handler.feature:43\n>> karate-config.js failed\n>> ReferenceError: \"v\" is not defined\njs failed:\n>>>>\n01: function fn() {\n02:   var env = karate.env; \n03:   karate.log(\"karate.env system property was:\", env);\n04:   if (!env) {\n05:     env = \"dev\";\n06:   }\n07: \n08:   var config = {\n09:     env: env,\n10:     myVarName: \"someValue\",\n11:     accessToken: v,\n12:   };\n13: \n14:   return config;\n15: }\n16: \n17: \/\/ karate.configure(\"afterFeature\", function () {\n18: \/\/   karate.log(\"Hey this is after feature....running after every feature.\");\n19: \/\/ });\n20: \n21: \/\/ karate.configure('beforeScenario', function () {\n22: \n23: \/\/   karate.log(\"Inside before scenarios\")\n24: \/\/     \/\/ Make a POST request to obtain an access token\n25: \/\/     \/\/ var accessTokenRequest = {\n26: \/\/     \/\/     method: 'GET',\n27: \/\/     \/\/     url: 'http:\/\/194.233.85.132:9000\/api\/v1\/refresh-token'\n28: \/\/     \/\/ };\n29: \n30: \/\/     \/\/ var response = karate.call(accessTokenRequest);\n31: \n32: \/\/     \/\/ \/\/ Check if the access token was successfully obtained\n33: \/\/     \/\/ if (response.status == 200) {\n34: \/\/     \/\/     \/\/ var accessToken = response.body.access_token; \/\/ Assuming the access token is in the response body\n35: \/\/     \/\/     \/\/ karate.configure('headers', { 'Authorization': 'Bearer ' + accessToken });\n36: \n37: \/\/     \/\/     karate.log(response)\n38: \/\/     \/\/ } else {\n39: \/\/     \/\/     karate.log('Failed to obtain access token');\n40: \/\/     \/\/ }\n41: \/\/ })\n<<<<\norg.graalvm.polyglot.PolyglotException: ReferenceError: \"v\" is not defined\n- <js>.fn(Unnamed:11)\n\nclasspath:features\/handler.feature:4\nclasspath:features\/handler.feature:5\nclasspath:features\/handler.feature:18\nclasspath:features\/handler.feature:45\nclasspath:features\/handler.feature:46\nclasspath:features\/handler.feature:47\nclasspath:features\/handler.feature:48\nclasspath:features\/handler.feature:51\nclasspath:features\/handler.feature:52\nclasspath:features\/handler.feature:53\nclasspath:features\/handler.feature:54","executorName":"main","name":"calling two api request","startTime":1694028527749,"refId":"[4:43]","endTime":1694028527816,"exampleIndex":-1}],"callDepth":0,"name":"work with DB again","description":"","resultDate":"2023-09-07 12:58:47 am","durationMillis":0.0,"passedCount":0}